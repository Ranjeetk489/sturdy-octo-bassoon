// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "postgres"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

model User {
  id            Int        @id @default(autoincrement())
  createdAt     DateTime   @default(now())
  updatedAt     DateTime   @updatedAt
  username      String
  email         String     @unique
  userId        String     @unique
  password      String
  trashNotes    Trash[]
  notes         Note[]
  archivedNotes Archived[]

  @@unique(fields: [email, password, userId], name: "user")
}

model Note {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  content   String
  contentId String   @unique
  tag       String?
  User      User?    @relation(fields: [userId], references: [userId])
  userId    String

  @@unique(fields: [id, contentId, userId])
}

model Archived {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  content   String
  contentId String   @unique
  tag       String?
  User      User?    @relation(fields: [userId], references: [userId])
  userId    String?

  @@unique(fields: [id, userId, contentId])
}

model Trash {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  content   String
  contentId String   @unique
  tag       String?
  User      User?    @relation(fields: [userId], references: [userId])
  userId    String?

  @@unique(fields: [id, userId, contentId])
}

//Future Implementation

// model NoteTag {
//   id      Int    @id @default(autoincrement())
//   tagName String @unique
//   tagId   String @unique
//   Note    Note[]
// }
// model TrashTag {
//   id      Int     @id @default(autoincrement())
//   tagName String  @unique
//   Note    Trash[]
// }

// model ArchivedTag {
//   id      Int        @id @default(autoincrement())
//   tagName String     @unique
//   Note    Archived[]
// }
